{"ast":null,"code":"var _jsxFileName = \"/Users/huntermoser/repos/dungeon-tracker/react-dungeon-tracker/src/components/img-slider/img-slider.components.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './img-slider.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Carousel = props => {\n  _s();\n  const {\n    children,\n    show\n  } = props;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [length, setLength] = useState(children.length);\n  const [touchPosition, setTouchPosition] = useState(null);\n\n  // Set the length to match current children from props\n  useEffect(() => {\n    setLength(children.length);\n  }, [children]);\n  const next = () => {\n    if (currentIndex < length - show) {\n      setCurrentIndex(prevState => prevState + 1);\n    }\n  };\n  const prev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(prevState => prevState - 1);\n    }\n  };\n  const handleTouchStart = e => {\n    const touchDown = e.touches[0].clientX;\n    setTouchPosition(touchDown);\n  };\n  const handleTouchMove = e => {\n    const touchDown = touchPosition;\n    if (touchDown === null) {\n      return;\n    }\n    const currentTouch = e.touches[0].clientX;\n    const diff = touchDown - currentTouch;\n    if (diff > 5) {\n      next();\n    }\n    if (diff < -5) {\n      prev();\n    }\n    setTouchPosition(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-wrapper\",\n      children: [currentIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prev,\n        className: \"left-arrow\",\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-content-wrapper\",\n        onTouchStart: handleTouchStart,\n        onTouchMove: handleTouchMove,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `carousel-content show-${show}`,\n          style: {\n            transform: `translateX(-${currentIndex * (100 / show)}%)`\n          },\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), currentIndex < length - show && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: next,\n        className: \"right-arrow\",\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Carousel, \"KCYMBIw14LY9bFYdhUXfF/ZjEzQ=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useEffect","useState","Carousel","props","children","show","currentIndex","setCurrentIndex","length","setLength","touchPosition","setTouchPosition","next","prevState","prev","handleTouchStart","e","touchDown","touches","clientX","handleTouchMove","currentTouch","diff","transform"],"sources":["/Users/huntermoser/repos/dungeon-tracker/react-dungeon-tracker/src/components/img-slider/img-slider.components.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './img-slider.css'\n\nconst Carousel = (props) => {\n    const {children, show} = props\n\n    const [currentIndex, setCurrentIndex] = useState(0)\n    const [length, setLength] = useState(children.length)\n\n    const [touchPosition, setTouchPosition] = useState(null)\n\n    // Set the length to match current children from props\n    useEffect(() => {\n        setLength(children.length)\n    }, [children])\n\n    const next = () => {\n        if (currentIndex < (length - show)) {\n            setCurrentIndex(prevState => prevState + 1)\n        }\n    }\n\n    const prev = () => {\n        if (currentIndex > 0) {\n            setCurrentIndex(prevState => prevState - 1)\n        }\n    }\n\n    const handleTouchStart = (e) => {\n        const touchDown = e.touches[0].clientX\n        setTouchPosition(touchDown)\n    }\n\n    const handleTouchMove = (e) => {\n        const touchDown = touchPosition\n\n        if(touchDown === null) {\n            return\n        }\n\n        const currentTouch = e.touches[0].clientX\n        const diff = touchDown - currentTouch\n\n        if (diff > 5) {\n            next()\n        }\n\n        if (diff < -5) {\n            prev()\n        }\n\n        setTouchPosition(null)\n    }\n\n    return (\n        <div className=\"carousel-container\">\n            <div className=\"carousel-wrapper\">\n                {/* You can alwas change the content of the button to other things */}\n                {\n                    currentIndex > 0 &&\n                    <button onClick={prev} className=\"left-arrow\">\n                        &lt;\n                    </button>\n                }\n                <div\n                    className=\"carousel-content-wrapper\"\n                    onTouchStart={handleTouchStart}\n                    onTouchMove={handleTouchMove}\n                >\n                    <div\n                        className={`carousel-content show-${show}`}\n                        style={{ transform: `translateX(-${currentIndex * (100 / show)}%)` }}\n                    >\n                        {children}\n                    </div>\n                </div>\n                {/* You can alwas change the content of the button to other things */}\n                {\n                    currentIndex < (length - show) &&\n                    <button onClick={next} className=\"right-arrow\">\n                        &gt;\n                    </button>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Carousel\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AAAA;AAEzB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EACxB,MAAM;IAACC,QAAQ;IAAEC;EAAI,CAAC,GAAGF,KAAK;EAE9B,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAACG,QAAQ,CAACI,MAAM,CAAC;EAErD,MAAM,CAACE,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACAD,SAAS,CAAC,MAAM;IACZS,SAAS,CAACL,QAAQ,CAACI,MAAM,CAAC;EAC9B,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,MAAMQ,IAAI,GAAG,MAAM;IACf,IAAIN,YAAY,GAAIE,MAAM,GAAGH,IAAK,EAAE;MAChCE,eAAe,CAACM,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;IAC/C;EACJ,CAAC;EAED,MAAMC,IAAI,GAAG,MAAM;IACf,IAAIR,YAAY,GAAG,CAAC,EAAE;MAClBC,eAAe,CAACM,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;IAC/C;EACJ,CAAC;EAED,MAAME,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,SAAS,GAAGD,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO;IACtCR,gBAAgB,CAACM,SAAS,CAAC;EAC/B,CAAC;EAED,MAAMG,eAAe,GAAIJ,CAAC,IAAK;IAC3B,MAAMC,SAAS,GAAGP,aAAa;IAE/B,IAAGO,SAAS,KAAK,IAAI,EAAE;MACnB;IACJ;IAEA,MAAMI,YAAY,GAAGL,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO;IACzC,MAAMG,IAAI,GAAGL,SAAS,GAAGI,YAAY;IAErC,IAAIC,IAAI,GAAG,CAAC,EAAE;MACVV,IAAI,EAAE;IACV;IAEA,IAAIU,IAAI,GAAG,CAAC,CAAC,EAAE;MACXR,IAAI,EAAE;IACV;IAEAH,gBAAgB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,oBAAoB;IAAA,uBAC/B;MAAK,SAAS,EAAC,kBAAkB;MAAA,WAGzBL,YAAY,GAAG,CAAC,iBAChB;QAAQ,OAAO,EAAEQ,IAAK;QAAC,SAAS,EAAC,YAAY;QAAA,UAAC;MAE9C;QAAA;QAAA;QAAA;MAAA,QAAS,eAEb;QACI,SAAS,EAAC,0BAA0B;QACpC,YAAY,EAAEC,gBAAiB;QAC/B,WAAW,EAAEK,eAAgB;QAAA,uBAE7B;UACI,SAAS,EAAG,yBAAwBf,IAAK,EAAE;UAC3C,KAAK,EAAE;YAAEkB,SAAS,EAAG,eAAcjB,YAAY,IAAI,GAAG,GAAGD,IAAI,CAAE;UAAI,CAAE;UAAA,UAEpED;QAAQ;UAAA;UAAA;UAAA;QAAA;MACP;QAAA;QAAA;QAAA;MAAA,QACJ,EAGFE,YAAY,GAAIE,MAAM,GAAGH,IAAK,iBAC9B;QAAQ,OAAO,EAAEO,IAAK;QAAC,SAAS,EAAC,aAAa;QAAA,UAAC;MAE/C;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAEX;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GAnFKV,QAAQ;AAAA,KAARA,QAAQ;AAqFd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}